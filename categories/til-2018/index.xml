<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TIL-2018 on cmygray</title>
    <link>http://cmygray.github.io/categories/til-2018/</link>
    <description>Recent content in TIL-2018 on cmygray</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 07 Jan 2018 14:53:27 +0900</lastBuildDate>
    
	<atom:link href="http://cmygray.github.io/categories/til-2018/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>You Don&#39;t Know JS: 객체(마무리)</title>
      <link>http://cmygray.github.io/post/til-2018/0107/</link>
      <pubDate>Sun, 07 Jan 2018 14:53:27 +0900</pubDate>
      
      <guid>http://cmygray.github.io/post/til-2018/0107/</guid>
      <description>객체 객체는 0개 이상의 프로퍼티로 구성되며, 프로퍼티는 데이터 프로퍼티와 접근자 프로퍼티로 나뉜다. 또 ES5부터 모든 프로퍼티는 서술자; Property Descriptor에 의해 표기되며 프로퍼티의 종류에 따라 서술자의 어트리뷰트가 달라진다. 프로퍼티 서술자의 어트리뷰트로는, [[Value]], [[Writable]], [[Configurable]], [[Enumerable]], [[Get]], [[Set]] 등이 있다. 까지가 앞서 살펴본 내용이었다.
 기본적으로 [[Get]] 연산은 주어진 이름의 프로퍼티를 찾아보고 있으면 그 값을 반환한다. 프로퍼티를 찾아보고 없으면 (&amp;hellip;) 다른 중요한 작업을 하도록 정의되어 있는데(&amp;hellip;)
 일반적으로 프로퍼티 접근자를 사용했을 때의 동작을 설명하고 있다.</description>
    </item>
    
    <item>
      <title>You Don&#39;t Know JS: 객체</title>
      <link>http://cmygray.github.io/post/til-2018/0106/</link>
      <pubDate>Sat, 06 Jan 2018 21:40:27 +0900</pubDate>
      
      <guid>http://cmygray.github.io/post/til-2018/0106/</guid>
      <description>객체; Object  In ECMAScript, an object is a collection of zero or more properties each with attributes that determine how each property can be used (&amp;hellip;) Properties are containers that hold other objects, primitive values, or functions.
 {}도 객체요, { msg: &#39;hello world&#39; } 또한 객체다. 객체를 구성하는 프로퍼티는 키와 값으로 구분되며, 객체, 원시값, 함수를 값으로 취한다.
프로퍼티 값의 타입이 함수일 때, 흔히 메소드라고 부른다. 하지만 이런 견해도 있다.</description>
    </item>
    
  </channel>
</rss>